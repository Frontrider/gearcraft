
buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url 'http://oss.sonatype.org/content/repositories/snapshots'
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: "kotlin"

//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
version = mod_version
group = "hu.frontrider.gearcraft" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "gearcraft_thermal"

configurations{
    fatJar
    compile.extendsFrom fatJar
}
//sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.4.2705"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    maven {
        url "https://jitpack.io"
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
}

dependencies {
    compile(project(":mod"))
    compile "cofh:ThermalFoundation:${mc_version}-${tf_version}:deobf"
    compile "cofh:CoFHCore:${mc_version}-${cofh_core_version}:deobf"
    compile "cofh:CoFHWorld:${mc_version}-${cofh_world_version}:deobf"
    compile "cofh:RedstoneFlux:1.12-2.+:deobf"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar{
    from(configurations.fatJar.collect{ it.isDirectory() ? it : zipTree(it) })
    //including the api classes.
    from(project.buildDir.absolutePath+"/classes/java/api/")
}